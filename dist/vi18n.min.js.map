{"version":3,"file":"vi18n.min.js","sources":["vi18n.js"],"names":["VI18N","locale","currency","isSupported","Error","this","formatters","instances","initialize","prototype","constructor","getLocale","getCurrency","number","window","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","date","DateTimeFormat","formatNumber","options","format","formatCurrency","formatDate","formatTime","hour","minute","second","get"],"mappings":"0JAEA,YAIA,SAAAA,GAAAC,EAAAC,GACA,IAAAF,EAAAG,cACA,KAAA,IAAAC,OAAA,iEAGAH,GAAAA,GAAA,QACAC,EAAAA,GAAA,MAEAG,KAAAJ,OAAAA,EACAI,KAAAH,SAAAA,EACAG,KAAAC,cAGAC,EAAAN,GAAAI,KAEAA,KAAAG,aAjBA,GAAAD,YAoBAP,GAAAS,WAEAC,YAAAV,EAEAQ,WAAA,WACA,GAAAP,GAAAI,KAAAM,YACAT,EAAAG,KAAAO,aAEAP,MAAAC,WAAAO,OAAA,GAAAC,QAAAC,KAAAC,aAAAf,GACAI,KAAAC,WAAAJ,SAAA,GAAAY,QAAAC,KAAAC,aAAAf,GAAAgB,MAAA,WAAAf,SAAAA,EAAAgB,sBAAA,EAAAC,sBAAA,IACAd,KAAAC,WAAAc,KAAA,GAAAN,QAAAC,KAAAM,eAAApB,IAGAU,UAAA,WACA,MAAAN,MAAAJ,QAGAW,YAAA,WACA,MAAAP,MAAAH,UAKAoB,aAAA,SAAAT,EAAAU,GACA,MAAA,gBAAAA,GAAA,GAAAlB,MAAAC,WAAAO,OAAAH,YAAAL,KAAAM,YAAAY,GAAAC,OAAAX,GAAAR,KAAAC,WAAAO,OAAAW,OAAAX,IAKAY,eAAA,SAAAZ,EAAAX,GACA,MAAAA,IAAA,gBAAAA,GACA,GAAAG,MAAAC,WAAAJ,SAAAQ,YAAAL,KAAAM,aAAAM,MAAA,WAAAf,SAAAA,EAAAgB,sBAAA,EAAAC,sBAAA,IAAAK,OAAAX,GACAX,KAAA,EACAG,KAAAiB,aAAAT,GAAAK,sBAAA,EAAAC,sBAAA,IAGAd,KAAAC,WAAAJ,SAAAsB,OAAAX,IAKAa,WAAA,SAAAN,EAAAG,GACA,MAAA,gBAAAA,GAAA,GAAAlB,MAAAC,WAAAc,KAAAV,YAAAL,KAAAM,YAAAY,GAAAC,OAAAJ,GAAAf,KAAAC,WAAAc,KAAAI,OAAAJ,IAGAO,WAAA,SAAAP,GACA,MAAAf,MAAAqB,WAAAN,GAAAQ,KAAA,UAAAC,OAAA,UAAAC,OAAA,cAKA9B,EAAA+B,IAAA,SAAA9B,GACA,MAAAM,GAAAN,IAGAD,EAAAG,YAAA,WACA,MAAA,QAAAW;;;;;;;;;;;;;;AAhFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\n\r\n\t'use strict';\r\n\r\n\tvar instances = {};\r\n\r\n\tfunction VI18N(locale, currency) {\r\n\t\tif (!VI18N.isSupported()) {\r\n\t\t\tthrow new Error('window.Intl not supported, did you forget to include polyfill?');\r\n\t\t}\r\n\r\n\t\tlocale = locale || 'nl-NL';\r\n\t\tcurrency = currency || 'EUR';\r\n\r\n\t\tthis.locale = locale;\r\n\t\tthis.currency = currency;\r\n\t\tthis.formatters = {};\r\n\r\n\t\t// Keep track of this instance\r\n\t\tinstances[locale] = this;\r\n\r\n\t\tthis.initialize();\r\n\t}\r\n\r\n\tVI18N.prototype = {\r\n\r\n\t\tconstructor: VI18N,\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tvar locale = this.getLocale(),\r\n\t\t\t\tcurrency =  this.getCurrency();\r\n\r\n\t\t\tthis.formatters.number = new window.Intl.NumberFormat(locale);\r\n\t\t\tthis.formatters.currency = new window.Intl.NumberFormat(locale, { style: 'currency', currency: currency, minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n\t\t\tthis.formatters.date = new window.Intl.DateTimeFormat(locale);\r\n\t\t},\r\n\r\n\t\tgetLocale: function() {\r\n\t\t\treturn this.locale;\r\n\t\t},\r\n\r\n\t\tgetCurrency: function() {\r\n\t\t\treturn this.currency;\r\n\t\t},\r\n\r\n\t\t// Format a number to a locale string\r\n\t\t// For more information see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\r\n\t\tformatNumber: function(number, options) {\r\n\t\t\treturn typeof options === 'object' ? new this.formatters.number.constructor(this.getLocale(), options).format(number) : this.formatters.number.format(number);\r\n\t\t},\r\n\r\n\t\t// Format a number to a locale currency string\r\n\t\t// For more information see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\r\n\t\tformatCurrency: function(number, currency) {\r\n\t\t\tif (currency && typeof currency === 'string') {\r\n\t\t\t\treturn new this.formatters.currency.constructor(this.getLocale(), { style: 'currency', currency: currency, minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(number);\r\n\t\t\t} else if (currency === false) {\r\n\t\t\t\treturn this.formatNumber(number, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n\t\t\t}\r\n\r\n\t\t\treturn this.formatters.currency.format(number);\r\n\t\t},\r\n\r\n\t\t// Format a data object to a locale string\r\n\t\t// For more information see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\r\n\t\tformatDate: function(date, options) {\r\n\t\t\treturn typeof options === 'object' ? new this.formatters.date.constructor(this.getLocale(), options).format(date) : this.formatters.date.format(date);\r\n\t\t},\r\n\r\n\t\tformatTime: function(date) {\r\n\t\t\treturn this.formatDate(date, { hour: '2-digit', minute: '2-digit',\tsecond: '2-digit' });\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tVI18N.get = function get(locale) {\r\n\t\treturn instances[locale];\r\n\t};\r\n\r\n\tVI18N.isSupported = function isSupported() {\r\n\t\treturn 'Intl' in window;\r\n\t};\n"]}